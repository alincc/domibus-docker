
functionsFile="${BASH_SOURCE[0]}"
echo "   - ${functionsFile}"

function dropMsSQLDomibusUser {
   echo ; echo "========= function: dropMsSQLDomibusUser"
   cat << EOF
   echo "drop user ${MsSQLDatabaseUserId};" |
   sqlplus sys/"${MsSQLDatabaseSYSPassword}"@"(DESCRIPTION= \
        (ADDRESS=(PROTOCOL=TCP) \
        (Host=${MsSQLDatabaseHost}) \
        (Port=${MsSQLDatabasePort})) \
        (CONNECT_DATA=(SID=${MsSQLDatabaseSID})))" \
        as sysdba
EOF

   echo "drop user ${MsSQLDatabaseUserId};" |
   sqlplus sys/"${MsSQLDatabaseSYSPassword}"@"(DESCRIPTION= \
	(ADDRESS=(PROTOCOL=TCP) \
	(Host=${MsSQLDatabaseHost}) \
	(Port=${MsSQLDatabasePort})) \
	(CONNECT_DATA=(SID=${MsSQLDatabaseSID})))" \
	as sysdba
}

function createMsSQLDomibusUser {
   echo ; echo "========= function: createMsSQLDomibusUser"
   cat << EOF
   echo "create user ${MsSQLDatabaseUserId} identified by ${MsSQLDatabaseUserPassword}\";" |
   sqlplus sys/"${MsSQLDatabaseSYSPassword}"@"(DESCRIPTION= \
        (ADDRESS=(PROTOCOL=TCP) \
        (Host=${MsSQLDatabaseHost}) \
        (Port=${MsSQLDatabasePort})) \
        (CONNECT_DATA=(SID=${MsSQLDatabaseSID})))" \
        as sysdba
EOF
   
   echo "create user ${MsSQLDatabaseUserId} identified by \"${MsSQLDatabaseUserPassword}\";" |
   sqlplus sys/"${MsSQLDatabaseSYSPassword}"@"(DESCRIPTION= \
	(ADDRESS=(PROTOCOL=TCP) \
	(Host=${MsSQLDatabaseHost}) \
	(Port=${MsSQLDatabasePort})) \
	(CONNECT_DATA=(SID=${MsSQLDatabaseSID})))" \
	as sysdba
}

function grantMsSQLDomibusUserPrivs {
   echo ; echo "========= function: grantMsSQLDomibusUserPrivs"
   cat << EOF
   echo "grant all privileges to ${MsSQLDatabaseUserId};" |
   sqlplus sys/"${MsSQLDatabaseSYSPassword}"@"(DESCRIPTION= \
        (ADDRESS=(PROTOCOL=TCP) \
        (Host=${MsSQLDatabaseHost}) \
        (Port=${MsSQLDatabasePort})) \
        (CONNECT_DATA=(SID=${MsSQLDatabaseSID})))" \
        as sysdba
EOF

   echo "grant all privileges to ${MsSQLDatabaseUserId};" |
   sqlplus sys/"${MsSQLDatabaseSYSPassword}"@"(DESCRIPTION= \
	(ADDRESS=(PROTOCOL=TCP) \
	(Host=${MsSQLDatabaseHost}) \
	(Port=${MsSQLDatabasePort})) \
	(CONNECT_DATA=(SID=${MsSQLDatabaseSID})))" \
	as sysdba
}

function CreateMsSQLDomibusTables {
   echo ; echo "========= function: CreateMsSQLDomibusTables"
   cat << EOF
   unzip -p $DOWNLOAD_DIR/Domibus/${DomibusVersion}/domibus-${DOMIBUS_PREFIX}-sql-scripts.zip sql-scripts/sql-scripts/oracle10g-${DOMIBUS_VERSION}.ddl | \
   sqlplus ${MsSQLDatabaseUserId}/"${MsSQLDatabaseUserPassword}"@"(DESCRIPTION= \
        (ADDRESS=(PROTOCOL=TCP) \
        (Host=${MsSQLDatabaseHost}) \
        (Port=${MsSQLDatabasePort})) \
        (CONNECT_DATA=(SID=${MsSQLDatabaseSID})))"
EOF

   unzip -p $DOWNLOAD_DIR/Domibus/${DomibusVersion}/domibus-${DOMIBUS_PREFIX}-sql-scripts.zip sql-scripts/oracle10g-${DOMIBUS_VERSION}.ddl | \
   sqlplus ${MsSQLDatabaseUserId}/"${MsSQLDatabaseUserPassword}"@"(DESCRIPTION= \
	(ADDRESS=(PROTOCOL=TCP) \
	(Host=${MsSQLDatabaseHost}) \
	(Port=${MsSQLDatabasePort})) \
	(CONNECT_DATA=(SID=${MsSQLDatabaseSID})))"
}

function initDatabaseMsSQL {
   if [ "${DatabaseInit}" == "FORCEINIT" ] ; then
      echo
      echo "Database Initialization (FORCEINIT) has been requested"
      echo
      echo "The Microsoft SQL Server Database ${MsSQLDatabaseHost}:${MsSQLDatabasePort}/${MsSQLDatabaseUserId} will be reinitialized..."

      dropMsSQLDomibusUser
      createMsSQLDomibusUser
      grantMsSQLDomibusUserPrivs
      CreateMsSQLDomibusTables
   fi

   if [ "${DatabaseInit}" == "INIT" ] ; then
      echo
      echo "Database Initialization has been requested"
   fi
}

